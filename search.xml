<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hey</title>
      <link href="/2020/06/25/hey/"/>
      <url>/2020/06/25/hey/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/06/25/hello-world/"/>
      <url>/2020/06/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>RISC-V ISA笔记</title>
      <link href="/2018/12/19/RISCV-ISA/"/>
      <url>/2018/12/19/RISCV-ISA/</url>
      
        <content type="html"><![CDATA[<p>Datapath部分见： <a class="btn-beautify button--animated outline larger" href="https://georgeokelly.github.io/2019/01/16/RISCV-Datapath/" target="_blank" rel="noopener" title="RISC-V Datapath"><i class="far fa-hand-point-right fa-fw"></i> RISC-V Datapath </a></p><hr /><p>RISC-V Instruction 的格式通常为<br /><span style="font-size:16px"> <strong>Operation Code + Destination Register + First Operand Register + Second Oprand Register</strong> </span></p><p>如 <strong><code>add x1, x2, x0</code></strong> 所对应的 <strong><code>opcode = add</code></strong> ; <strong><code>rd = x1</code></strong>; <strong><code>rs1 = x2</code></strong>; <strong><code>rs2 = x0</code></strong></p><h1 id="基础部分-rv32i-base-integer-isa"><a class="markdownIt-Anchor" href="#基础部分-rv32i-base-integer-isa"></a> 基础部分 RV32I Base Integer ISA</h1><p>对于RV32I，有32个寄存器，分别是：</p><table><thead><tr><th style="text-align:center">寄存器</th><th style="text-align:center">调用名字</th><th style="text-align:center">用途</th><th style="text-align:center">存储者</th><th style="text-align:center">调用中是否保留</th></tr></thead><tbody><tr><td style="text-align:center">x0</td><td style="text-align:center">zero</td><td style="text-align:center">常数&quot;0&quot;</td><td style="text-align:center">N.A.</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">x1</td><td style="text-align:center">ra</td><td style="text-align:center">返回地址</td><td style="text-align:center">Caller</td><td style="text-align:center">No</td></tr><tr><td style="text-align:center">x2</td><td style="text-align:center">sp</td><td style="text-align:center">栈指针</td><td style="text-align:center">Callee</td><td style="text-align:center">Yes</td></tr><tr><td style="text-align:center">x3</td><td style="text-align:center">gp</td><td style="text-align:center">全局指针</td><td style="text-align:center">/</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">x4</td><td style="text-align:center">tp</td><td style="text-align:center">线程指针</td><td style="text-align:center">/</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">x5</td><td style="text-align:center">t0</td><td style="text-align:center">临时存储/alternate link register</td><td style="text-align:center">Caller</td><td style="text-align:center">No</td></tr><tr><td style="text-align:center">x6-x7</td><td style="text-align:center">t1-t2</td><td style="text-align:center">临时存储</td><td style="text-align:center">Caller</td><td style="text-align:center">No</td></tr><tr><td style="text-align:center">x8</td><td style="text-align:center">s0/fp</td><td style="text-align:center">保存用寄存器/帧指针（配合栈指针界定一个函数的栈）</td><td style="text-align:center">Callee</td><td style="text-align:center">Yes</td></tr><tr><td style="text-align:center">x9</td><td style="text-align:center">s1</td><td style="text-align:center">保存用寄存器</td><td style="text-align:center">Callee</td><td style="text-align:center">Yes</td></tr><tr><td style="text-align:center">x10-x11</td><td style="text-align:center">a0-a1</td><td style="text-align:center">函数参数/返回值</td><td style="text-align:center">Caller</td><td style="text-align:center">No</td></tr><tr><td style="text-align:center">x12-x17</td><td style="text-align:center">a2-a7</td><td style="text-align:center">函数参数</td><td style="text-align:center">Caller</td><td style="text-align:center">No</td></tr><tr><td style="text-align:center">x18-x27</td><td style="text-align:center">s2-s11</td><td style="text-align:center">保存用寄存器</td><td style="text-align:center">Callee</td><td style="text-align:center">Yes</td></tr><tr><td style="text-align:center">x28-x31</td><td style="text-align:center">t3-t6</td><td style="text-align:center">临时存储</td><td style="text-align:center">Caller</td><td style="text-align:center">No</td></tr></tbody></table><p>然后还有pc寄存器。</p><p>而对于RV32F和RV32D，也有32个寄存器，分别是：</p><table><thead><tr><th style="text-align:center">寄存器</th><th style="text-align:center">调用名字</th><th style="text-align:center">用途</th><th style="text-align:center">存储者</th><th style="text-align:center">调用中是否保留</th></tr></thead><tbody><tr><td style="text-align:center">f0-f7</td><td style="text-align:center">ft0-ft7</td><td style="text-align:center">浮点临时存储</td><td style="text-align:center">Caller</td><td style="text-align:center">No</td></tr><tr><td style="text-align:center">f8-f9</td><td style="text-align:center">fs0-fs1</td><td style="text-align:center">浮点保存用寄存器</td><td style="text-align:center">Callee</td><td style="text-align:center">Yes</td></tr><tr><td style="text-align:center">f10-f11</td><td style="text-align:center">fa0-fa1</td><td style="text-align:center">浮点函数参数/返回值</td><td style="text-align:center">Caller</td><td style="text-align:center">No</td></tr><tr><td style="text-align:center">f12-f17</td><td style="text-align:center">fa2-fa7</td><td style="text-align:center">浮点函数参数</td><td style="text-align:center">Caller</td><td style="text-align:center">No</td></tr><tr><td style="text-align:center">f18-f27</td><td style="text-align:center">fs2-fs11</td><td style="text-align:center">浮点保存用寄存器</td><td style="text-align:center">Callee</td><td style="text-align:center">Yes</td></tr><tr><td style="text-align:center">f28-f31</td><td style="text-align:center">ft8-ft11</td><td style="text-align:center">浮点临时存储</td><td style="text-align:center">Caller</td><td style="text-align:center">No</td></tr></tbody></table><div class="note info">**Tips:**<p>callee:是一个指针，指向拥有这个arguement对象的<span style="color:firebrick">函数</span>；</p>caller:保留着<span style="color:firebrick">调用当前函数的函数</span>的引用。</div><div class="note info">**Tips:**<p>调用中是否保留 Preserved across call</p><p>保留数据不被改变的称为saved register;否则为temporary register。对于 <code>ra</code>: Just a reminder that if you choose to save the return address in a register, then that register must be one which is preserved across procedure calls. Even better, save <code>ra</code> on the stack.</div></p><h2 id="rv32i标准指令集有以下几种框架"><a class="markdownIt-Anchor" href="#rv32i标准指令集有以下几种框架"></a> RV32I标准指令集有以下几种框架：</h2><ul><li><span style="color:red"><strong>R-format</strong></span> for register-register arithmetic/logical operations</li><li><span style="color:red"><strong>I-format</strong></span> for register-immediate arith/logical operations and loads</li><li><span style="color:red"><strong>S-format</strong></span> for stores</li><li><span style="color:red"><strong>B-format</strong></span> for branches</li><li><span style="color:red"><strong>U-format</strong></span> for 20-bit upper immediate instructions</li><li><span style="color:red"><strong>J-format</strong></span> for jumps</li><li><span style="color:red"><strong>Others</strong></span>:  Used for OS &amp; Syncronization</li></ul><p><span style="color:red"><strong>R</strong></span>即Reg相关；<span style="color:red"><strong>I</strong></span>即立即数相关；<span style="color:red"><strong>S</strong></span>存储相关；<span style="color:red"><strong>B</strong></span>分支相关；<span style="color:red"><strong>U</strong></span>高位数相关（因为一条32位指令中无法表示高达32位的数据）；<span style="color:red"><strong>J</strong></span>跳转相关。</p><div class="note info"> **Tips: About Arithmetic & Logical Operations.**<p>逻辑右移(LSR)是将各位依次右移指定位数，然后在<span style="color:firebrick">左侧补0</span>，算术右移(ASR)是将各位依次右移指定位数，然后在左侧<span style="color:firebrick">用原符号位补齐</span>。</p><p>逻辑左移与算术左移操作相同。</p><p>RISC-V采用小端格式（Little-Endian），即**低位**字节排放在内存的**低地址**端，高位字节排放在内存的高地址端。</p></div><h2 style="color:forestgreen">R-Format</h2><p>通常是XXX rd, rs1, rs2。</p><table><thead><tr><th style="text-align:center">Funct7</th><th style="text-align:center">rs2</th><th style="text-align:center">rs1</th><th style="text-align:center">Funct3</th><th style="text-align:center">rd</th><th style="text-align:center">opcode</th></tr></thead><tbody><tr><td style="text-align:center">7</td><td style="text-align:center">5</td><td style="text-align:center">5</td><td style="text-align:center">3</td><td style="text-align:center">5</td><td style="text-align:center">7</td></tr></tbody></table><p><code>31.........................................................0</code></p><p>R-Format的 <strong>Opcode = 0110011</strong></p><p>其中，Funct7 + Funct3 + opcode 定义了要执行的操作。但其实Funct7在RV32I中应用不多，比如Add和Sub有Funct7的改变。</p><table><thead><tr><th style="text-align:center">/</th><th style="text-align:center">Funct7</th><th style="text-align:center">Funct3</th><th style="text-align:center">opcode</th><th style="text-align:center">用途</th></tr></thead><tbody><tr><td style="text-align:center"><span style="color:CornflowerBlue"><strong>ADD</strong></span></td><td style="text-align:center">0000000</td><td style="text-align:center">000</td><td style="text-align:center">0110011</td><td style="text-align:center">加法</td></tr><tr><td style="text-align:center"><span style="color:CornflowerBlue"><strong>SUB</strong></span></td><td style="text-align:center">0100000</td><td style="text-align:center">000</td><td style="text-align:center">0110011</td><td style="text-align:center">减法</td></tr><tr><td style="text-align:center">SLL</td><td style="text-align:center">0000000</td><td style="text-align:center">001</td><td style="text-align:center">0110011</td><td style="text-align:center">左移</td></tr><tr><td style="text-align:center">SLT</td><td style="text-align:center">0000000</td><td style="text-align:center">010</td><td style="text-align:center">0110011</td><td style="text-align:center">Set Less Than</td></tr><tr><td style="text-align:center">SLT</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">:= rs1 &lt; rs2 ? 1:0</td></tr><tr><td style="text-align:center">SLTU</td><td style="text-align:center">0000000</td><td style="text-align:center">011</td><td style="text-align:center">0110011</td><td style="text-align:center">SLT Unsigned</td></tr><tr><td style="text-align:center"><span style="color:CornflowerBlue"><strong>XOR</strong></span></td><td style="text-align:center">0000000</td><td style="text-align:center">100</td><td style="text-align:center">0110011</td><td style="text-align:center">异或</td></tr><tr><td style="text-align:center">SRL</td><td style="text-align:center">0000000</td><td style="text-align:center">101</td><td style="text-align:center">0110011</td><td style="text-align:center">逻辑右移</td></tr><tr><td style="text-align:center">SRA</td><td style="text-align:center">0100000</td><td style="text-align:center">101</td><td style="text-align:center">0110011</td><td style="text-align:center">算术右移</td></tr><tr><td style="text-align:center"><span style="color:CornflowerBlue"><strong>OR</strong></span></td><td style="text-align:center">0000000</td><td style="text-align:center">110</td><td style="text-align:center">0110011</td><td style="text-align:center">或</td></tr><tr><td style="text-align:center"><span style="color:CornflowerBlue"><strong>AND</strong></span></td><td style="text-align:center">0000000</td><td style="text-align:center">111</td><td style="text-align:center">0110011</td><td style="text-align:center">与</td></tr></tbody></table><p><strong>相关伪指令：</strong></p><p><code><span style="font-size:18px"><span style="color:CornflowerBlue">mv rd, rs</span>   =   addi rd, rs, x0</span></code></p><p><code><span style="font-size:18px"><span style="color:CornflowerBlue">nop</span>   =   addi r0, r0, x0</span></code></p><p><code><span style="font-size:18px">not rd, rs   =   xori rd, rs, 111111111111</span></code></p><div class="note info">**Note:**<p>因为某事突然发现RISC-V好像没有循环移位的指令（未查证），要实现循环移位估计要三条指令以上。</div></p><h2 style="color:forestgreen">I-Format</h2><table><thead><tr><th style="text-align:center">Immediate</th><th style="text-align:center">rs1</th><th style="text-align:center">Funct3</th><th style="text-align:center">rd</th><th style="text-align:center">opcode</th></tr></thead><tbody><tr><td style="text-align:center">12</td><td style="text-align:center">5</td><td style="text-align:center">3</td><td style="text-align:center">5</td><td style="text-align:center">7</td></tr></tbody></table><p><code>31.........................................................0</code></p><p>I-Format的 <strong>Opcode = 0010011</strong></p><table><thead><tr><th style="text-align:center">/</th><th style="text-align:center">Shift-by-immediate (shamt)</th><th style="text-align:center">rs1</th><th style="text-align:center">Funct3</th><th style="text-align:center">rd</th><th style="text-align:center">opcode</th></tr></thead><tbody><tr><td style="text-align:center">0000000</td><td style="text-align:center">5</td><td style="text-align:center">5</td><td style="text-align:center">3</td><td style="text-align:center">5</td><td style="text-align:center">7</td></tr></tbody></table><p><code>31.........................................................0</code></p><p>第一部分包括<span style="color:CornflowerBlue">ADDI</span>, SLTI, SLTIU, <span style="color:CornflowerBlue">XORI</span>, <span style="color:CornflowerBlue">ORI</span>, <span style="color:CornflowerBlue">ANDI</span>（立即数有12位）和<span style="color:CornflowerBlue">SLLI, SRLI, SRAI</span>（立即数仅有5位），还包括<span style="color:firebrick">JALR</span>。</p><p>第二部分包括load instruction，格式同ADDI（12位的立即数）Load Opcode 0000011有LB(load byte) ，LH(load halfword=2 bytes)， <span style="color:CornflowerBlue">LW</span>，LBU(load unsigned byte)，LHU(load unsigned halfword)。</p><h2 style="color:forestgreen">S-Format</h2><table><thead><tr><th style="text-align:center">Imm[11:5]</th><th style="text-align:center">rs2</th><th style="text-align:center">rs1</th><th style="text-align:center">Funct3</th><th style="text-align:center">Imm[4:0]</th><th style="text-align:center">opcode</th></tr></thead><tbody><tr><td style="text-align:center">7</td><td style="text-align:center">5</td><td style="text-align:center">5</td><td style="text-align:center">3</td><td style="text-align:center">5</td><td style="text-align:center">7</td></tr></tbody></table><p><code>31.........................................................0</code></p><p>S-Format的 <strong>Opcode = 0100011</strong></p><p>包括SB，<span style="color:CornflowerBlue">SW</span>，SH等指令。</p><h2 style="color:forestgreen">B-Format</h2><table><thead><tr><th style="text-align:center">imm[12]</th><th style="text-align:center">imm[10:5]</th><th style="text-align:center">rs2</th><th style="text-align:center">rs1</th><th style="text-align:center">Funct3</th><th style="text-align:center">imm[4:1]</th><th style="text-align:center">imm[11]</th><th style="text-align:center">opcode</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">6</td><td style="text-align:center">5</td><td style="text-align:center">5</td><td style="text-align:center">3</td><td style="text-align:center">4</td><td style="text-align:center">1</td><td style="text-align:center">7</td></tr></tbody></table><p><code>31.........................................................0</code></p><p>B-Format的 <strong>Opcode = 1100011</strong></p><p>可以表示-4096~4094的范围</p><div class="note info">**Note:**<p>The <span style="color:red">12 immediate bits</span>  encode  even <span style="color:red">13-bit</span> signed byte offsets (<strong><span style="color:red">lowest bit</span> of offset is always <span style="color:red">zero</span>, so no need to store it</strong>).</p><p>包括<span style="color:CornflowerBlue">BEQ</span>，<span style="color:CornflowerBlue">BNE</span>，BLT(branch less than: if [rs1]&lt;[rs2], then branch) ，BGE(branch greater than or equal: if [rs1]&gt;=[rs2], then branch) ，BLTU，BGEU。</p></div><p><strong>相关伪指令：</strong></p><p><code>beqz x1, label　　=　　beq x1, x0, label</code></p><p><code>bnez x1, label　　=　　bne x1, x0, label</code></p><h2 style="color:forestgreen">U-Format</h2><table><thead><tr><th style="text-align:center">imm[31:12]</th><th style="text-align:center">rd</th><th style="text-align:center">opcode</th></tr></thead><tbody><tr><td style="text-align:center">20</td><td style="text-align:center">5</td><td style="text-align:center">7</td></tr></tbody></table><p><code>31.........................................................0</code></p><p>LUI – Load Upper Immediate  lui rd, upper im(20-bit)</p><p>e.x.</p><p><code>lui x10, 0x87654 # x10 = original value → 0x87654000</code></p><p>AUIPC – Add Upper Immediate to PC</p><p>e.x.</p><p><code>auipc t0, 1　　# t0 = original value → PC + 0x00001000</code></p><p><code>auipc t0, 0　　# t0 = original value → PC</code></p><p>相关伪指令：</p><p>加载立即数</p><p><code><span style="font-size:18px"><span style="color:CornflowerBlue">li rd, imm(32-bit)</span> = lui rd, imm(20-bit) + addi rd, rd, imm(12-bit)<br /></span></code></p><p>加载地址</p><p><code><span style="font-size:18px"><span style="color:CornflowerBlue">la rd, label</span> = auipc rd, imm(20-bit) + addi rd, rd, imm(12-bit)<br /></span></code></p><h2 style="color:forestgreen">J-Format</h2><table><thead><tr><th style="text-align:center">imm[20]</th><th style="text-align:center">imm[10:1]</th><th style="text-align:center">imm[11]</th><th style="text-align:center">imm[19:12]</th><th style="text-align:center">rd</th><th style="text-align:center">opcode</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">10</td><td style="text-align:center">1</td><td style="text-align:center">8</td><td style="text-align:center">5</td><td style="text-align:center">7</td></tr></tbody></table><p><code>31.........................................................0</code></p><p><code><span style="color:CornflowerBlue">jal x0, label</span> </code>     Discard return address</p><p>(1)<code><span style="color:CornflowerBlue">jal ra, function_name</span> </code></p><p>(2)<code><span style="color:CornflowerBlue">jr ra</span></code>  Call Function within 2^18 (指令中得到的立即数为 22 bits，而1条指令占用了4字节=32 bits).</p><div class="note warning">注意jalr是I-Format而不是J-Format，其指令结构如下。</div><table><thead><tr><th style="text-align:center">Immediate</th><th style="text-align:center">rs1</th><th style="text-align:center">Funct3</th><th style="text-align:center">rd</th><th style="text-align:center">opcode</th></tr></thead><tbody><tr><td style="text-align:center">imm</td><td style="text-align:center">5</td><td style="text-align:center">3</td><td style="text-align:center">5</td><td style="text-align:center">7</td></tr><tr><td style="text-align:center">imm[11:0]</td><td style="text-align:center">rs1</td><td style="text-align:center">000</td><td style="text-align:center">rd</td><td style="text-align:center">1100111</td></tr></tbody></table><p><strong># Call function at any 32-bit <span style="color:red">absolute address</span></strong></p><p><code>lui x1, &lt;high 20-bit&gt;</code></p><p><code>jalr ra, x1, &lt;low 12-bit&gt;</code>      Call Function at 32-bit absolute address</p><p><strong># Jump <span style="color:red">PC-relative</span> with 32-bit <span style="color:red">offset</span></strong></p><p><code>auipc x1, &lt;high 20-bit&gt;</code></p><p><code>jalr x0, x1, &lt;low 12-bit&gt;</code>      Jump within 32-bit</p><p>相关伪指令:</p><p><code>j label = jal x0, label</code></p><p><code>ret = jr ra = jalr x0, 0(ra)</code></p><div class="note info">**Elaboration:**<p>如上所述，B-Format可以看作是S-Format的一个变种（the immediate field is rotated 1 bit for branch instructions, a variation of the S-Format that we relabel the B-Format.）同理，J-Format也可以看作是U-Format的变种，或者说是某种复用。所以实际上RISC-V只有4种框架，但我们为了方便仍称呼6框架。</div></p><p><img src= "/img/loading.gif" data-src="https://raw.githubusercontent.com/georgeokelly/hello-world/master/blog_images/2019-1-15/1.jpg" alt="fig1" /></p><h1 id="补充部分-rv32f-and-rv32d"><a class="markdownIt-Anchor" href="#补充部分-rv32f-and-rv32d"></a> 补充部分 RV32F and RV32D</h1><p>待更新</p><h1 id="补充部分-rv32v"><a class="markdownIt-Anchor" href="#补充部分-rv32v"></a> 补充部分 RV32V</h1><p>待更新</p><h1 id="补充部分-rv32m"><a class="markdownIt-Anchor" href="#补充部分-rv32m"></a> 补充部分 RV32M</h1><p>RV32M是关于乘法和除法的指令。显然地，有</p><p><code>Quotient = (Dividend - Remainder) / Divisor</code></p><p><code>Product = Multiplicand * Multiplier</code></p><table><thead><tr><th style="text-align:center">-</th><th style="text-align:center">RV32M</th><th style="text-align:center">-</th></tr></thead><tbody><tr><td style="text-align:center"><strong>mul</strong>tiply</td><td style="text-align:center">-</td><td style="text-align:center"><strong>mul</strong></td></tr><tr><td style="text-align:center"><strong>mul</strong>tiply <strong>h</strong>igh</td><td style="text-align:center">-</td><td style="text-align:center"><strong>mulh</strong></td></tr><tr><td style="text-align:center">/</td><td style="text-align:center"><strong>u</strong>signed</td><td style="text-align:center"><strong>mulhu</strong></td></tr><tr><td style="text-align:center">/</td><td style="text-align:center"><strong>s</strong>igned <strong>u</strong>nsigned</td><td style="text-align:center"><strong>mulhsu</strong></td></tr><tr><td style="text-align:center"><strong>div</strong>ide</td><td style="text-align:center">-</td><td style="text-align:center"><strong>div</strong></td></tr><tr><td style="text-align:center">/</td><td style="text-align:center"><strong>u</strong>signed</td><td style="text-align:center"><strong>divu</strong></td></tr><tr><td style="text-align:center"><strong>rem</strong>ainder</td><td style="text-align:center">-</td><td style="text-align:center"><strong>rem</strong></td></tr><tr><td style="text-align:center">/</td><td style="text-align:center"><strong>u</strong>nsigned</td><td style="text-align:center"><strong>remu</strong></td></tr></tbody></table><p>对于许多微处理器，整数除法指令相对很慢，而右移可以实现2的次方的除法（同理左移实现乘法）。而对于其它数作为除数也可以通过乘一个倒数，再修正乘积的高半部分进行优化。以下是一个除以3的例子。</p><p><code>lui t0, 0xaaaab #t0 = 0x000aaaab</code></p><p><code>addi t0, t0, -1365 #t0 ≈ 2^32 / 1.5 = 0xaaaaaaab</code></p><p><code>mulhu a1, a0, t0 #a1 ≈ a0 / 1.5</code></p><p><code>srli a1, a1, 0x1 #a1 = a0 / 3</code></p><p>可以看出在一些简单的情况这种方法可以推广（比如除数低于31位，且近似值容易恢复到原值的情况）。事实上，这个方法普遍适用，只是对于其他情形，修正过程会更加复杂。 关于正确性，生成倒数和修正的证明，见 <em>Division by invariant integers using multiplication</em>, Granlund and Montgomery 1994. <a href="http://dl.acm.org/citation.cfm?doid=178243.178249" target="_blank" rel="noopener">HERE</a>。这里简要描述下usigned division的理论基础。</p><div class="note success"><p>假设m, d, l 是非负整数，d≠0，且满足</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mi>N</mi><mo>+</mo><mi>l</mi></mrow></msup><mo>≤</mo><mi>m</mi><mo>∗</mo><mi>d</mi><mo>≤</mo><msup><mn>2</mn><mrow><mi>N</mi><mo>+</mo><mi>l</mi></mrow></msup><mo>+</mo><msup><mn>2</mn><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">2^{N+l}\leq m*d\leq 2^{N+l}+2^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.035078em;vertical-align:-0.13597em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9824379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span></span></p><p>则对于任意整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><msup><mn>2</mn><mrow><mi>N</mi><mo>+</mo><mi>l</mi></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n\in [0, 2^{N+l})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mi>l</mi><mi>o</mi><mi>o</mi><mi>r</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mi>d</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mi>l</mi><mi>o</mi><mi>o</mi><mi>r</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>m</mi><mi>n</mi></mrow><msup><mn>2</mn><mrow><mi>N</mi><mo>+</mo><mi>l</mi></mrow></msup></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">floor(n/d)=floor(\frac{mn}{2^{N+l}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord">/</span><span class="mord mathdefault">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7751079999999999em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><p><strong>PROOF</strong></p><p>设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>=</mo><mi>m</mi><mi>d</mi><mo>−</mo><msup><mn>2</mn><mrow><mi>N</mi><mo>+</mo><mi>l</mi></mrow></msup></mrow><annotation encoding="application/x-tex">k=md-2^{N+l}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span></span>，那么有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>≤</mo><mi>k</mi><mo>≤</mo><msup><mn>2</mn><mi>l</mi></msup></mrow><annotation encoding="application/x-tex">0\leq k\leq 2^l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span></p><p>给定<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><msup><mn>2</mn><mrow><mi>N</mi><mo>+</mo><mi>l</mi></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n\in [0, 2^{N+l})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><mi>q</mi><mi>d</mi><mo>+</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">n=qd+r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>。其中r=mod(n, d)且满足 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mi>d</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">r\in [0, d-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>。易知同时有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mi>l</mi><mi>o</mi><mi>o</mi><mi>r</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mi>d</mi><mo stretchy="false">)</mo><mo>=</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">floor(n/d)=q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord">/</span><span class="mord mathdefault">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span>。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>e</mi><mi>t</mi><mspace width="1em"/><mi>F</mi><mo>=</mo><mfrac><mrow><mi>m</mi><mi>n</mi></mrow><msup><mn>2</mn><mrow><mi>N</mi><mo>+</mo><mi>l</mi></mrow></msup></mfrac><mo>−</mo><mi>f</mi><mi>l</mi><mi>o</mi><mi>o</mi><mi>r</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mi>d</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><mfrac><mrow><mi>m</mi><mi>n</mi></mrow><msup><mn>2</mn><mrow><mi>N</mi><mo>+</mo><mi>l</mi></mrow></msup></mfrac><mo>−</mo><mi>q</mi><mo>=</mo><mfrac><mrow><mi>k</mi><mo>+</mo><msup><mn>2</mn><mrow><mi>N</mi><mo>+</mo><mi>l</mi></mrow></msup></mrow><mi>d</mi></mfrac><mo>×</mo><mfrac><mi>n</mi><msup><mn>2</mn><mrow><mi>N</mi><mo>+</mo><mi>l</mi></mrow></msup></mfrac><mo>−</mo><mfrac><mrow><mi>n</mi><mo>−</mo><mi>r</mi></mrow><mi>d</mi></mfrac><mspace linebreak="newline"></mspace><mo>=</mo><mfrac><mi>k</mi><msup><mn>2</mn><mi>l</mi></msup></mfrac><mo>×</mo><mfrac><mi>n</mi><mrow><msup><mn>2</mn><mi>N</mi></msup><mi>d</mi></mrow></mfrac><mo>+</mo><mfrac><mi>n</mi><mi>d</mi></mfrac><mo>−</mo><mfrac><mrow><mi>n</mi><mo>−</mo><mi>r</mi></mrow><mi>d</mi></mfrac><mo>=</mo><mfrac><mi>k</mi><msup><mn>2</mn><mi>l</mi></msup></mfrac><mo>×</mo><mfrac><mi>n</mi><msup><mn>2</mn><mi>N</mi></msup></mfrac><mo>×</mo><mfrac><mn>1</mn><mi>d</mi></mfrac><mo>+</mo><mfrac><mi>r</mi><mi>d</mi></mfrac><mspace linebreak="newline"></mspace><mo>≤</mo><mfrac><mrow><msup><mn>2</mn><mi>N</mi></msup><mo>−</mo><mn>1</mn></mrow><msup><mn>2</mn><mi>N</mi></msup></mfrac><mo>×</mo><mfrac><mn>1</mn><mi>d</mi></mfrac><mo>+</mo><mfrac><mrow><mi>d</mi><mo>−</mo><mn>1</mn></mrow><mi>d</mi></mfrac><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><mrow><msup><mn>2</mn><mi>N</mi></msup><mi>d</mi></mrow></mfrac><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">Let\quad F=\frac{mn}{2^{N+l}}-floor(n/d)\\=\frac{mn}{2^{N+l}}-q=\frac{k+2^{N+l}}{d}\times\frac{n}{2^{N+l}}-\frac{n-r}{d}\\=\frac{k}{2^l}\times\frac{n}{2^Nd}+\frac{n}{d}-\frac{n-r}{d}=\frac{k}{2^l}\times\frac{n}{2^N}\times\frac{1}{d}+\frac{r}{d}\\\leq\frac{2^N-1}{2^N}\times\frac{1}{d}+\frac{d-1}{d}=1-\frac{1}{2^Nd}&lt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7751079999999999em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord">/</span><span class="mord mathdefault">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7751079999999999em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.2121079999999997em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5261079999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7751079999999999em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.9463300000000001em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603300000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7751079999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.767331em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.9463300000000001em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603300000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7751079999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.767331em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.204331em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183309999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.767331em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.767331em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><p>所以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mi>l</mi><mi>o</mi><mi>o</mi><mi>r</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mo>→</mo><mi>f</mi><mi>l</mi><mi>o</mi><mi>o</mi><mi>r</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">/</mi><mi>d</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mi>l</mi><mi>o</mi><mi>o</mi><mi>r</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>m</mi><mi>n</mi></mrow><msup><mn>2</mn><mrow><mi>N</mi><mo>+</mo><mi>l</mi></mrow></msup></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">floor(F)=0\to floor(n/d)=floor(\frac{mn}{2^{N+l}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord">/</span><span class="mord mathdefault">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1074199999999998em;vertical-align:-0.3574199999999999em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285714em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>。因此除以d可以用乘以m加移位操作来实现。</p><p>实际上，有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>n</mi><mi>d</mi></mfrac><mo>&lt;</mo><mfrac><mrow><mi>m</mi><mi>n</mi></mrow><msup><mn>2</mn><mrow><mi>N</mi><mo>+</mo><mi>l</mi></mrow></msup></mfrac><mo>&lt;</mo><mfrac><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><mi>d</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{n}{d}&lt;\frac{mn}{2^{N+l}}&lt;\frac{n+1}{d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0528119999999999em;vertical-align:-0.3574199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.64258em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7820285714285714em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3574199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，所以可以用m来代替d。</p></div><div class="note info"> **Tips:**<p>MULH 和 MULHU 可以检查乘法中的溢出（这里指乘积是否超过32位）。</p><p>在执行除法指令前，请确认除数不为0. 用 <code>beqz</code></p><p>MULHSU 对多字符号型乘法很有效。</p></div><h1 id="补充部分-rv32a"><a class="markdownIt-Anchor" href="#补充部分-rv32a"></a> 补充部分 RV32A</h1><p>待更新</p><h1 id="补充部分-rv32c"><a class="markdownIt-Anchor" href="#补充部分-rv32c"></a> 补充部分 RV32C</h1><p>待更新</p><h1 id="补充部分-rv64"><a class="markdownIt-Anchor" href="#补充部分-rv64"></a> 补充部分 RV64</h1><p>待更新</p><h1 id="references"><a class="markdownIt-Anchor" href="#references"></a> References</h1><p><a href="http://www-inst.eecs.berkeley.edu/~cs61c/sp18/" target="_blank" rel="noopener">UC Berkeley CS61C</a></p><p><a href="http://www.kvakil.me/venus/" target="_blank" rel="noopener">可以在线编译RISC-V的工具</a></p><p><a href="http://riscvbook.com/" target="_blank" rel="noopener">The RISC-V Reader: An Open Architecture Atlas</a></p><!-- Last SVG --><p><img src= "/img/loading.gif" data-src="https://img.shields.io/badge/last--updated-2019.1.31-blue.svg" alt="" /></p>]]></content>
      
      
      <categories>
          
          <category> Computer Architecture </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机硬件 </tag>
            
            <tag> Hardware </tag>
            
            <tag> RISC-V </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
